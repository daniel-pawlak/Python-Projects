from unidecode import unidecode
import re


def shave_company_name(company_name):
    return ''.join([l for l in unidecode(company_name.lower().strip()) if l.isalnum()])[:500]

def get_core_name(company_name):
    parentheses = re.compile(r'\(.+\)', re.IGNORECASE)
    company_name = parentheses.sub('', company_name)
    #Germany
    cokgd = re.compile(r'& Co\. KG', re.IGNORECASE)
    company_name = cokgd.sub('', company_name)
    cokgs = re.compile(r'& Co KG', re.IGNORECASE)
    company_name = cokgs.sub('', company_name)
    cokg = re.compile(r'& Co\.KG', re.IGNORECASE)
    company_name = cokg.sub('', company_name)
    gmbh = re.compile(r'\bGmbH\b', re.IGNORECASE)
    company_name = gmbh.sub('', company_name)
    mbh = re.compile(r'\bmbH\b', re.IGNORECASE)
    company_name = mbh.sub('', company_name)
    group = re.compile(r'\bGroup\b', re.IGNORECASE)
    company_name = group.sub('', company_name)
    holding = re.compile(r'\bHolding\b', re.IGNORECASE)
    company_name = holding.sub('', company_name)
    ag = re.compile(r'\bAG\b', re.IGNORECASE)
    company_name = ag.sub('', company_name)
    gbr = re.compile(r'\bGbR\b', re.IGNORECASE)
    company_name = gbr.sub('', company_name)
    ohg = re.compile(r'\bOHG\b', re.IGNORECASE)
    company_name = ohg.sub('', company_name)
    stille = re.compile(r'\bStille Gesellschaft\b', re.IGNORECASE)
    company_name = stille.sub('', company_name)
    partg = re.compile(r'\bPartG\b', re.IGNORECASE)
    company_name = partg.sub('', company_name)
    ug = re.compile(r'\bUG\b', re.IGNORECASE)
    company_name = ug.sub('', company_name)
    kgaa = re.compile(r'\bKGaA\b', re.IGNORECASE)
    company_name = kgaa.sub('', company_name)
    stiftung = re.compile(r'\bStiftung\b', re.IGNORECASE)
    company_name = stiftung.sub('', company_name)
    genossenschaft = re.compile(r'\bGenossenschaft\b', re.IGNORECASE)
    company_name = genossenschaft.sub('', company_name)
    vvag = re.compile(r'\bVVaG\b', re.IGNORECASE)
    company_name = vvag.sub('', company_name)
    #UK US
    cic = re.compile(r'\bCIC\b', re.IGNORECASE)
    company_name = cic.sub('', company_name)
    cio = re.compile(r'\bCIO\b', re.IGNORECASE)
    company_name = cio.sub('', company_name)
    lllp = re.compile(r'\bLLLP\b', re.IGNORECASE)
    company_name = lllp.sub('', company_name)
    llp = re.compile(r'\bLLP\b', re.IGNORECASE)
    company_name = llp.sub('', company_name)
    lp = re.compile(r'\bLP\b', re.IGNORECASE)
    company_name = lp.sub('', company_name)
    pllc = re.compile(r'\bPLLC\b', re.IGNORECASE)
    company_name = pllc.sub('', company_name)
    llc = re.compile(r'\bLLC\b', re.IGNORECASE)
    company_name = llc.sub('', company_name)
    lc = re.compile(r'\bLC\b', re.IGNORECASE)
    company_name = lc.sub('', company_name)
    ltdd = re.compile(r'\bLtd\.', re.IGNORECASE)
    company_name = ltdd.sub('', company_name)
    ltd = re.compile(r'\bLtd\b', re.IGNORECASE)
    company_name = ltd.sub('', company_name)
    corpd = re.compile(r'\bCorp\.', re.IGNORECASE)
    company_name = corpd.sub('', company_name)
    corp = re.compile(r'\bCorp\b', re.IGNORECASE)
    company_name = corp.sub('', company_name)
    incd = re.compile(r'\bInc\.', re.IGNORECASE)
    company_name = incd.sub('', company_name)
    inc = re.compile(r'\bInc\b', re.IGNORECASE)
    company_name = inc.sub('', company_name)
    andco1 = re.compile(r'\band Co\.', re.IGNORECASE)
    company_name = andco1.sub('', company_name)
    andco2 = re.compile(r'\band Co\b', re.IGNORECASE)
    company_name = andco2.sub('', company_name)
    andco3 = re.compile(r'\b& Co\.', re.IGNORECASE)
    company_name = andco3.sub('', company_name)
    andco4 = re.compile(r'\b& Co\b', re.IGNORECASE)
    company_name = andco4.sub('', company_name)
    limited = re.compile(r'\bLimited\b', re.IGNORECASE)
    company_name = limited.sub('', company_name)
    #France
    sarl1 = re.compile(r'\bSARL\b', re.IGNORECASE)
    company_name = sarl1.sub('', company_name)
    sarl2 = re.compile(r'\bSÃ RL\b', re.IGNORECASE)
    company_name = sarl2.sub('', company_name)
    eurl = re.compile(r'\bEURL\b', re.IGNORECASE)
    company_name = eurl.sub('', company_name)
    sasu = re.compile(r'\bSASU\b', re.IGNORECASE)
    company_name = sasu.sub('', company_name)
    sas = re.compile(r'\bSAS\b', re.IGNORECASE)
    company_name = sas.sub('', company_name)
    sa = re.compile(r'\bSA\b', re.IGNORECASE)
    company_name = sa.sub('', company_name)
    scop = re.compile(r'\bSCOP\b', re.IGNORECASE)
    company_name = scop.sub('', company_name)
    sem = re.compile(r'\bSEM\b', re.IGNORECASE)
    company_name = sem.sub('', company_name)
    #Spain
    sad = re.compile(r'\bS\.A\.D\.', re.IGNORECASE)
    company_name = sad.sub('', company_name)
    slne = re.compile(r'\bS\.L\.N\.E\.', re.IGNORECASE)
    company_name = slne.sub('', company_name)
    sll = re.compile(r'\bS\.L\.L\.', re.IGNORECASE)
    company_name = sll.sub('', company_name)
    scp = re.compile(r'\bS\.C\.P\.', re.IGNORECASE)
    company_name = scp.sub('', company_name)
    scrad = re.compile(r'\bS\.Cra\.', re.IGNORECASE)
    company_name = scrad.sub('', company_name)
    scra = re.compile(r'\bS\.Cra\b', re.IGNORECASE)
    company_name = scra.sub('', company_name)
    scoopd = re.compile(r'\bS\.Coop\.', re.IGNORECASE)
    company_name = scoopd.sub('', company_name)
    scoop = re.compile(r'\bS\.Coop\b', re.IGNORECASE)
    company_name = scoop.sub('', company_name)
    sadd = re.compile(r'\bS\.A\.', re.IGNORECASE)
    company_name = sadd.sub('', company_name)
    sldd = re.compile(r'\bS\.L\.', re.IGNORECASE)
    company_name = sldd.sub('', company_name)
    scdd = re.compile(r'\bS\.C\.', re.IGNORECASE)
    company_name = scdd.sub('', company_name)
    #Sweden
    ab = re.compile(r'\bAB\b', re.IGNORECASE)
    company_name = ab.sub('', company_name)
    hb = re.compile(r'\bHB\b', re.IGNORECASE)
    company_name = hb.sub('', company_name)
    kb = re.compile(r'\bKB\b', re.IGNORECASE)
    company_name = kb.sub('', company_name)
    #Italy
    spa = re.compile(r'\bS\.p\.a\.', re.IGNORECASE)
    company_name = spa.sub('', company_name)
    sapa = re.compile(r'\bS\.a\.p\.a\.', re.IGNORECASE)
    company_name = sapa.sub('', company_name)
    scpa = re.compile(r'\bS\.c\.p\.a\.', re.IGNORECASE)
    company_name = scpa.sub('', company_name)
    scarl = re.compile(r'\bS\.c\.a\.r\.l\.', re.IGNORECASE)
    company_name = scarl.sub('', company_name)
    scrl = re.compile(r'\bS\.c\.r\.l\.', re.IGNORECASE)
    company_name = scrl.sub('', company_name)
    srl = re.compile(r'\bS\.r\.l\.', re.IGNORECASE)
    company_name = srl.sub('', company_name)
    sas = re.compile(r'\bS\.a\.s\.', re.IGNORECASE)
    company_name = sas.sub('', company_name)
    snc = re.compile(r'\bS\.n\.c\.', re.IGNORECASE)
    company_name = snc.sub('', company_name)
    ss = re.compile(r'\bS\.s\.', re.IGNORECASE)
    company_name = ss.sub('', company_name)
    #Netherlands
    vof = re.compile(r'\bvof\b', re.IGNORECASE)
    company_name = vof.sub('', company_name)
    bv = re.compile(r'\bbv\b', re.IGNORECASE)
    company_name = bv.sub('', company_name)
    nv = re.compile(r'\bnv\b', re.IGNORECASE)
    company_name = nv.sub('', company_name)
    #Poland
    sc = re.compile(r'\bs\.c\.', re.IGNORECASE)
    company_name = sc.sub('', company_name)
    spj = re.compile(r'\bsp\.j\.', re.IGNORECASE)
    company_name = spj.sub('', company_name)
    spk = re.compile(r'\bsp\.k\.', re.IGNORECASE)
    company_name = spk.sub('', company_name)
    spp = re.compile(r'\bsp\.p\.', re.IGNORECASE)
    company_name = spp.sub('', company_name)
    spzoo1 = re.compile(r'\bSp\. z o\.o\.', re.IGNORECASE)
    company_name = spzoo1.sub('', company_name)
    spzoo2 = re.compile(r'\bSp\. zoo\b', re.IGNORECASE)
    company_name = spzoo2.sub('', company_name)
    spzoo3 = re.compile(r'\bSp zoo\b', re.IGNORECASE)
    company_name = spzoo3.sub('', company_name)


    if len(company_name.split()) > 2:
        if any(company_name.split()[1].lower() == x for x in ['und']):
            company_name = company_name.split()[0] + company_name.split()[2]
        else:
            company_name = ' '.join(company_name.split()[:2])
    if company_name[-1] == ',':
        company_name = company_name[:-1]
    return company_name.strip()